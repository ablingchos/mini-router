syntax = "proto3";

package providerpb;
option go_package = "git.woa.com/kefuai/mini-router/pkg/proto/providerpb";

service ProviderService {
  rpc Register(RegisterRequest) returns (RegisterReply);
  rpc Heartbeat(HeartbeatRequest) returns (HeartbeatReply);
  rpc Unregister(UnregisterRequest) returns (UnregisterReply);
}

message RegisterRequest {
  string group_name         = 1;  // 所在的组名，或namespace名
  string host_name          = 2;  // 提供的服务名
  string ip                 = 3;
  string port               = 4;
  uint32 weight             = 5;
  int64 timeout             = 6;  // 心跳超时时间
  MatchRule match_rule      = 7;  // 键值匹配规则
  LoadBalancer routing_rule = 8;  // 标准路由规则
}

message RegisterReply {
  uint32 eid     = 1;  // endpoint id
  int64 lease_id = 2;  // keep alive lease id
}

message HeartbeatRequest {
  string group_name = 1;
  string host_name  = 2;
  uint32 eid        = 3;
  int64 lease_id    = 4;  // keep alive lease id
}

message HeartbeatReply {}

enum LoadBalancer {
  random          = 0;  // 随机
  consistent_hash = 1;  // 一致性哈希
  weight          = 2;  // 权重
  destination     = 3;  // 指定目标
}

message MatchRule {
  Match match    = 1;  // 匹配方式
  string content = 2;  // 匹配内容
}

enum Match {
  prefix = 0;  // 前缀匹配
  exact  = 1;  // 完全匹配
}

message UnregisterRequest {
  string group_name = 1;
  string host_name  = 2;
  uint32 eid        = 3;
  int64 lease_id    = 4;
}

message UnregisterReply {}